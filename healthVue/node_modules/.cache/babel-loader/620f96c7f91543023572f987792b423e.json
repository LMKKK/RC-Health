{"remainingRequest":"F:\\Projects\\git-repository\\RC-Health\\healthVue\\node_modules\\babel-loader\\lib\\index.js!F:\\Projects\\git-repository\\RC-Health\\healthVue\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!F:\\Projects\\git-repository\\RC-Health\\healthVue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\Projects\\git-repository\\RC-Health\\healthVue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!F:\\Projects\\git-repository\\RC-Health\\healthVue\\src\\views\\appointmentUser.vue?vue&type=template&id=e91f6040","dependencies":[{"path":"F:\\Projects\\git-repository\\RC-Health\\healthVue\\src\\views\\appointmentUser.vue","mtime":1687965561989},{"path":"F:\\Projects\\git-repository\\RC-Health\\healthVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1687062820333},{"path":"F:\\Projects\\git-repository\\RC-Health\\healthVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1687062848762},{"path":"F:\\Projects\\git-repository\\RC-Health\\healthVue\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1687062923207},{"path":"F:\\Projects\\git-repository\\RC-Health\\healthVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1687062820333},{"path":"F:\\Projects\\git-repository\\RC-Health\\healthVue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1687062902422}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:\\Projects\\git-repository\\RC-Health\\healthVue\\src\\views\\appointmentUser.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div style=\"padding: 10px\">\n    <!--    搜索区域-->\n    <div style=\"margin: 10px 0\">\n      <el-input v-model=\"search\" placeholder=\"请输入关键字\" style=\"width: 20%\" clearable></el-input>\n      <el-button style=\"margin-left: 5px\" @click=\"load\">查询</el-button>\n      <el-button type=\"primary\" @click=\"add\">我要预约</el-button>\n    </div>\n    <el-table v-loading=\"loading\" :data=\"tableData\" border stripe style=\"width: 100%\">\n\n      <template #empty>\n        <el-empty description=\"您还没有预约呦呦~~~\" />\n      </template>\n\n      <el-table-column type=\"index\" label=\"序号\" sortable align=\"center\">\n      </el-table-column>\n      <el-table-column prop=\"appointmentPeople\" label=\"预约人\" align=\"center\">\n      </el-table-column>\n      <el-table-column prop=\"appointmentTime\" label=\"预约时间\" align=\"center\">\n      </el-table-column>\n      <el-table-column prop=\"mealName\" label=\"所选套餐\" align=\"center\">\n      </el-table-column>\n      <el-table-column prop=\"remark\" label=\"说明\" align=\"center\">\n      </el-table-column>\n\n      <el-table-column label=\"操作\" align=\"center\" width=\"200\">\n        <template #default=\"scope\">\n          <el-button size=\"mini\" type=\"primary\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-popconfirm title=\"确定删除吗？\" @confirm=\"handleDelete(scope.row)\">\n            <template #reference>\n              <el-button size=\"mini\" type=\"danger\">取消</el-button>\n            </template>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <div style=\"margin: 10px 0\">\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"currentPage\"\n        :page-sizes=\"[5, 10, 20]\" :page-size=\"pageSize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination>\n    </div>\n\n    <el-dialog title=\"预约信息\" v-model=\"dialogVisible\" style=\"width: 50%; margin: 10% auto 50px;\">\n\n      <el-form :model=\"ruleForm\" label-width=\"120px\" :rules=\"rules\" ref=\"ruleForm\">\n        <el-form-item label=\"预约体检时间\" prop=\"appointmentTime\">\n          <el-date-picker v-model=\"ruleForm.appointmentTime\" type=\"date\" placeholder=\"请选择预约体检时间\" @change=\"timeChange\" />\n        </el-form-item>\n        <el-form-item label=\"体检套餐\" prop=\"mealId\">\n          <el-select v-model=\"ruleForm.mealId\" clearable placeholder=\"请选择体检套餐\" @change=\"onMealChange\">\n            <el-option v-for=\"item in mealOptions\" :key=\"item.id\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"检查项目有:\">\n          <el-table \n          ref=\"multipleTable\"\n          :data=\"groupsInMeal\" \n          style=\"width: 100%\" \n          @selection-change=\"handleSelectionChange\">\n            <template #empty>\n              <el-empty description=\"你还没有选择套餐呦~~\" :image-size=\"80\" />\n            </template>\n            <el-table-column v-if=\"ruleForm.mealId === 0\" type=\"selection\" width=\"55\" align=\"center\">\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"检查组\" width=\"180\" />\n            <el-table-column prop=\"remark\" label=\"说明\" width=\"180\" />\n          </el-table>\n        </el-form-item>\n\n        <el-form-item label=\"说明\">\n          <el-input type=\"textarea\" :rows=\"2\" placeholder=\"请输入补充信息\" v-model=\"ruleForm.remark\"></el-input>\n        </el-form-item>\n      </el-form>\n\n\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"save('ruleForm')\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n\n\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\nimport moment from \"moment\"\n\nexport default {\n  name: 'appointmentUser',\n  components: {},\n  data() {\n    return {\n      loading: true,\n      ruleForm: {},\n      dialogVisible: false,\n      search: '',\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      tableData: [],\n      vis: false,\n      detail: {},\n      rules: {\n        appointmentTime: [{ required: true, message: '请选择预约体检时间', trigger: 'blur' }],\n        mealId: [{ required: true, message: '请选择体检套餐', trigger: 'blur' }],\n      },\n      multipleSelection: [],\n      checkItemsData: [],\n      mealOptions: [],\n      loginUser: {},\n      groupsInMeal: [],\n      checkGroupsData: []\n\n    }\n  },\n  created() {\n    let userStr = sessionStorage.getItem(\"user\") || \"{}\"\n    this.loginUser = JSON.parse(userStr)\n    this.load();\n    this.getMealList();\n  },\n  methods: {\n    filesUploadSuccess(res) {\n      console.log(res)\n      this.ruleForm.cover = res.data\n    },\n    load() {\n      this.loading = true\n      request.get(\"/appointment\", {\n        params: {\n          pageNum: this.currentPage,\n          pageSize: this.pageSize,\n          search: this.search,\n          userId: this.loginUser.id\n        }\n      }).then(res => {\n        this.loading = false\n        this.tableData = res.data.records\n        this.total = res.data.total\n      })\n    },\n    add() {\n      this.dialogVisible = true\n      this.ruleForm = {}\n\n    },\n    save(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          if (this.ruleForm.id) {  // 更新\n            this.mealOptions.forEach(element => {\n              if (this.ruleForm.mealId == element.id) {\n                this.ruleForm.mealName = element.name;\n              }\n            });\n            console.log(this.ruleForm);\n\n            // 特判是否是自定义套餐\n            if (this.ruleForm.mealId === 0) {\n              console.log('你选择的套餐是自定义')\n              console.log('你选择的检查组有', this.multipleSelection)\n              // 获取所有选择的检查组的id\n              let selectData = JSON.parse(JSON.stringify(this.multipleSelection));\n              // console.log(\"选中的检查组的id值：：\", selectData);\n              let groupIds = [];\n              selectData.forEach(element => {\n                groupIds.push(element.id);\n              });\n\n              console.log('选中的检查组的id值是', groupIds)\n              this.ruleForm.groupIds = groupIds.toString();\n              console.log('要提交的检查组id有',this.ruleForm.groupIds)\n            }\n\n\n            //return\n            request.put(\"/appointment\", this.ruleForm).then(res => {\n              console.log(res)\n              if (res.code === '0') {\n                this.$message({\n                  type: \"success\",\n                  message: \"更新成功\"\n                })\n              } else {\n                this.$message({\n                  type: \"error\",\n                  message: res.msg\n                })\n              }\n              this.load() // 刷新表格的数据\n              this.dialogVisible = false  // 关闭弹窗\n            })\n          } else {  // 新增\n\n\n            // 初始化预约基本信息\n            let userStr = sessionStorage.getItem(\"user\") || \"{}\"\n            let user = JSON.parse(userStr)\n            this.mealOptions.forEach(element => {\n              if (this.ruleForm.mealId == element.id) {\n                this.ruleForm.mealName = element.name;\n              }\n            });\n            this.ruleForm.createPeople = user.nickName;\n            this.ruleForm.appointmentPeople = user.nickName\n            // 格式化日期，因为 日期选择框的值是Date对象，需要格式化为字符串\n            this.ruleForm.appointmentTime = moment(this.ruleForm.appointmentTime).format('YYYY-MM-DD HH:mm:ss');\n            this.ruleForm.appointmentPeopleId = user.id;\n\n            // 特判是否是自定义套餐\n            if (this.ruleForm.mealId === 0) {\n              console.log('你选择的套餐是自定义')\n              console.log('你选择的检查组有', this.multipleSelection)\n              // 获取所有选择的检查组的id\n              let selectData = JSON.parse(JSON.stringify(this.multipleSelection));\n              // console.log(\"选中的检查组的id值：：\", selectData);\n              let groupIds = [];\n              selectData.forEach(element => {\n                groupIds.push(element.id);\n              });\n\n              console.log('选中的检查组的id值是', groupIds)\n              this.ruleForm.groupIds = groupIds.toString();\n              console.log('要提交的检查组id有',this.ruleForm.groupIds)\n            }\n\n            console.log(\"this.ruleForm::\", this.ruleForm);\n            // return;\n            request.post(\"/appointment\", this.ruleForm).then(res => {\n              console.log(res)\n              if (res.code === '0') {\n                this.$message({\n                  type: \"success\",\n                  message: \"新增成功\"\n                })\n              } else {\n                this.$message({\n                  type: \"error\",\n                  message: res.msg\n                })\n              }\n\n              this.load() // 刷新表格的数据\n              this.dialogVisible = false  // 关闭弹窗\n            })\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n\n\n    },\n    handleEdit(row) {\n      //console.log(\"row::\", row);\n      let now = moment(moment().format('YYYY-MM-DD'))\n      if(moment(row.appointmentTime) < now ){\n        this.$message({\n            type: \"warning\",\n            message: \"体检时间已过，不可以编辑了呦~~~\"\n          })\n          return \n      }\n      this.dialogVisible = true\n      this.onMealChange()\n      this.ruleForm = JSON.parse(JSON.stringify(row));\n      // 如果是自定义套餐，那么检查组需要回显勾选\n      if(this.ruleForm.mealId === 0){\n        console.log('勾选回显')\n        let formData = JSON.parse(JSON.stringify(row));\n        // 渲染选中效果\n        this.$nextTick(() => {\n            if (formData.groupIds) {\n              // 获取该套餐的检查组id\n              let ids = formData.groupIds.split(',');\n              console.log(\"ids：：\", ids)\n\n              this.groupsInMeal.forEach((elemet,idx) => {\n                const elemetData = JSON.parse(JSON.stringify(elemet));\n                console.log(\"表格数据elemetData：：\", elemetData)\n                ids.forEach(id => {\n                  if (id == elemetData.id) {\n                    console.log('初始化选中', elemetData)\n                    this.$refs.multipleTable.toggleRowSelection(this.groupsInMeal[idx], true)\n                  }\n                });\n              });\n            }\n        });\n\n      }\n      \n    },\n    handleDelete(row) {\n      console.log(row)\n      let now = moment(moment().format('YYYY-MM-DD'))\n      if(moment(row.appointmentTime) < now ){\n        this.$message({\n            type: \"warning\",\n            message: \"体检时间已过，不可以取消了呦~~~\"\n          })\n          return \n      }\n\n      row.isDel = 1;\n      request.put(\"/appointment\", row).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"删除成功\"\n          })\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          })\n        }\n        this.load()  // 删除之后重新加载表格的数据\n      })\n    },\n    handleSizeChange(pageSize) {   // 改变当前每页的个数触发\n      this.pageSize = pageSize\n      this.load()\n    },\n    handleCurrentChange(pageNum) {  // 改变当前页码触发\n      this.currentPage = pageNum\n      this.load()\n    },\n    toggleSelection(rows) {\n      console.log(rows);\n      if (rows) {\n        rows.forEach(row => {\n          this.$refs.multipleTable.toggleRowSelection(row);\n        });\n      } else {\n        this.$refs.multipleTable.clearSelection();\n      }\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    getMealList() {\n      request.post(\"/checkSetMeal/getMealList\", {}).then(res => {\n        console.log(res)\n        res.data.forEach(element => {\n          element.label = element.name;\n          element.value = element.id;\n        });\n        this.mealOptions = res.data;\n        console.log(\"新的下拉选信息：：\", this.mealOptions);\n      })\n    },\n    timeChange() {\n      console.log('用户选择时间', this.ruleForm.appointmentTime);\n      // 用户预约时间校验\n      // 1. 选择的时间必须是今天及以后的\n      // 2. 如果1 成立，那么向服务器发送请求，查看当天预约是否已满\n\n      let now = moment(moment().format('YYYY-MM-DD'))\n      if (moment(this.ruleForm.appointmentTime) < now) {\n        this.$message({ type: \"error\", message: '预约时间必须是今日或将来的日期' })\n        this.ruleForm.appointmentTime = null\n        return\n      }\n\n      let params = { appointmentDay: moment(this.ruleForm.appointmentTime).format('YYYY-MM-DD') };\n      console.log(\"校验时的时间参数：：\", params);\n\n      request.post(\"/appointment/validateCount\", params).then(res => {\n        console.log(res)\n        if (res.code == 0) {\n          this.$message({ type: \"success\", message: res.data })\n        } else {\n          this.ruleForm.appointmentTime = null\n          this.$message({ type: \"error\", message: res.msg })\n        }\n      })\n    },\n    onMealChange() {\n\n      if (this.ruleForm.mealId === 0) {\n        console.log('你选择了自定义套餐')\n\n        // 获取所有的检查组\n        request.post(\"/checkGroup/getCheckGroupList\", this.ruleForm).then(res => {\n          console.log(res)\n          this.checkGroupsData = res.data;\n          this.groupsInMeal = this.checkGroupsData\n          console.log('所有的检查组信息', this.checkGroupsData)\n        })\n\n        return\n      }\n\n      console.log('你选择了套餐,套餐id为', this.ruleForm.mealId)\n\n      request.get('/checkGroup/byMealId', {\n        params: {\n          mealId: this.ruleForm.mealId\n        }\n      }).then(res => {\n        console.log('该套餐所有的检查组有:', res.data)\n        if (res.code === '-1') {\n          this.$message({\n            type: \"warning\",\n            message: res.msg\n          })\n          return\n        }\n        this.groupsInMeal = res.data\n      })\n\n    }\n  }\n}\n</script>\n"],"sourceRoot":""}]}